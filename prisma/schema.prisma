generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  name       String
  avatar     String?
  password   String
  created_at DateTime
  updated_at DateTime

  readBooks          readBooksByUser[]
  mostReadCategory   mostReadCategory? @relation(fields: [mostReadCategoryId], references: [id])
  mostReadCategoryId String?
}

model Book {
  id          String            @id @default(uuid())
  name        String
  author      String
  description String?
  picture     String?
  pages       Int
  created_at  DateTime
  updated_at  DateTime
  categories  CategoryByBook[]
  readBooks   readBooksByUser[]
}

model Category {
  id         String   @id @default(uuid())
  name       String
  created_at DateTime
  updated_at DateTime

  books              CategoryByBook[]
  mostReadCategory   mostReadCategory? @relation(fields: [mostReadCategoryId], references: [id])
  mostReadCategoryId String?
}

model CategoryByBook {
  id         String @id @default(uuid())
  bookId     String
  categoryId String

  Book     Book     @relation(fields: [bookId], references: [id])
  Category Category @relation(fields: [categoryId], references: [id])
}

model mostReadCategory {
  id         String   @id @default(uuid())
  userId     String
  categoryId String
  created_at DateTime
  updated_at DateTime

  Category Category[]
  User     User[]
}

model readBooksByUser {
  id           String   @id @default(uuid())
  userId       String
  bookId       String
  description  String
  starts       Int
  created_at   DateTime
  lastTimeRead DateTime
  isFavorite   Boolean

  user User @relation(fields: [userId], references: [id])
  book Book @relation(fields: [bookId], references: [id])
}
